"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getTransactionConfig = exports.getNetwork = exports.Network = exports.getEndpoint = exports.getWeb3 = void 0;
const web3_1 = __importDefault(require("web3"));
const getWeb3 = (privateKey, endpoint) => {
    // const provider = new HDWalletProvider(privateKey, endpoint);
    const web3 = new web3_1.default(endpoint);
    const account = web3.eth.accounts.privateKeyToAccount("0x" + privateKey);
    web3.eth.accounts.wallet.add(account);
    // tslint:disable-next-line: no-object-mutation
    web3.eth.defaultAccount = account.address;
    // return new Web3(provider as any);
    return [web3, account.address];
};
exports.getWeb3 = getWeb3;
// Free tier - only used as a fallback.
const defaultInfuraKey = "3b7a6c29f9c048d688a848899888aa96";
const getEndpoint = (network, ethereumNode, infuraKey) => {
    return ethereumNode
        ? ethereumNode
        : `https://${network}.infura.io/v3/${infuraKey || defaultInfuraKey}`;
};
exports.getEndpoint = getEndpoint;
var Network;
(function (Network) {
    Network["Mainnet"] = "mainnet";
    Network["Ropsten"] = "ropsten";
    Network["Kovan"] = "kovan";
    Network["Rinkeby"] = "rinkeby";
    Network["G\u00F6rli"] = "goerli";
})(Network = exports.Network || (exports.Network = {}));
const getNetwork = (network) => {
    switch (network.toLowerCase()) {
        case "mainnet":
        case "main":
            return Network.Mainnet;
        case "kovan":
            return Network.Kovan;
        case "rinkeby":
            return Network.Rinkeby;
        case "görli":
        case "goerli":
        case "gorli":
            return Network.Görli;
        case "ropsten":
        case "testnet":
        default:
            return Network.Ropsten;
    }
};
exports.getNetwork = getNetwork;
const getTransactionConfig = (options) => {
    const txConfig = {};
    // tslint:disable: no-object-mutation
    if (options.from) {
        txConfig.from = options.from;
    }
    if (options.from) {
        txConfig.from = options.from;
    }
    // if (options.to) { txConfig.to = options.to; }
    if (options.gasPrice) {
        txConfig.gasPrice = options.gasPrice;
    }
    if (options.gas) {
        txConfig.gas = options.gas;
    }
    if (options.value) {
        txConfig.value = options.value;
    }
    if (options.data) {
        txConfig.data = options.data;
    }
    if (options.nonce) {
        txConfig.nonce = options.nonce;
    }
    // if (options.chainId) { txConfig.chainId = options.chainId; }
    // if (options.common) { txConfig.common = options.common; }
    // if (options.chain) { txConfig.chain = options.chain; }
    // if (options.hardfork) { txConfig.hardfork = options.hardfork; }
    return txConfig;
};
exports.getTransactionConfig = getTransactionConfig;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXRoVXRpbHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvaGFuZGxlcnMvRVRIL2V0aFV0aWxzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLGdEQUF3QjtBQUdqQixNQUFNLE9BQU8sR0FBRyxDQUNuQixVQUFrQixFQUNsQixRQUFnQixFQUNGLEVBQUU7SUFDaEIsK0RBQStEO0lBQy9ELE1BQU0sSUFBSSxHQUFHLElBQUksY0FBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ2hDLE1BQU0sT0FBTyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLG1CQUFtQixDQUFDLElBQUksR0FBRyxVQUFVLENBQUMsQ0FBQztJQUN6RSxJQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ3RDLCtDQUErQztJQUMvQyxJQUFJLENBQUMsR0FBRyxDQUFDLGNBQWMsR0FBRyxPQUFPLENBQUMsT0FBTyxDQUFDO0lBQzFDLG9DQUFvQztJQUNwQyxPQUFPLENBQUMsSUFBSSxFQUFFLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQztBQUNuQyxDQUFDLENBQUM7QUFaVyxRQUFBLE9BQU8sV0FZbEI7QUFFRix1Q0FBdUM7QUFDdkMsTUFBTSxnQkFBZ0IsR0FBRyxrQ0FBa0MsQ0FBQztBQUVyRCxNQUFNLFdBQVcsR0FBRyxDQUN2QixPQUEyQixFQUMzQixZQUFnQyxFQUNoQyxTQUE2QixFQUMvQixFQUFFO0lBQ0EsT0FBTyxZQUFZO1FBQ2YsQ0FBQyxDQUFDLFlBQVk7UUFDZCxDQUFDLENBQUMsV0FBVyxPQUFPLGlCQUFpQixTQUFTLElBQUksZ0JBQWdCLEVBQUUsQ0FBQztBQUM3RSxDQUFDLENBQUM7QUFSVyxRQUFBLFdBQVcsZUFRdEI7QUFFRixJQUFZLE9BTVg7QUFORCxXQUFZLE9BQU87SUFDZiw4QkFBbUIsQ0FBQTtJQUNuQiw4QkFBbUIsQ0FBQTtJQUNuQiwwQkFBZSxDQUFBO0lBQ2YsOEJBQW1CLENBQUE7SUFDbkIsZ0NBQWdCLENBQUE7QUFDcEIsQ0FBQyxFQU5XLE9BQU8sR0FBUCxlQUFPLEtBQVAsZUFBTyxRQU1sQjtBQUVNLE1BQU0sVUFBVSxHQUFHLENBQUMsT0FBZSxFQUFXLEVBQUU7SUFDbkQsUUFBUSxPQUFPLENBQUMsV0FBVyxFQUFFLEVBQUU7UUFDM0IsS0FBSyxTQUFTLENBQUM7UUFDZixLQUFLLE1BQU07WUFDUCxPQUFPLE9BQU8sQ0FBQyxPQUFPLENBQUM7UUFFM0IsS0FBSyxPQUFPO1lBQ1IsT0FBTyxPQUFPLENBQUMsS0FBSyxDQUFDO1FBRXpCLEtBQUssU0FBUztZQUNWLE9BQU8sT0FBTyxDQUFDLE9BQU8sQ0FBQztRQUUzQixLQUFLLE9BQU8sQ0FBQztRQUNiLEtBQUssUUFBUSxDQUFDO1FBQ2QsS0FBSyxPQUFPO1lBQ1IsT0FBTyxPQUFPLENBQUMsS0FBSyxDQUFDO1FBRXpCLEtBQUssU0FBUyxDQUFDO1FBQ2YsS0FBSyxTQUFTLENBQUM7UUFDZjtZQUNJLE9BQU8sT0FBTyxDQUFDLE9BQU8sQ0FBQztLQUM5QjtBQUNMLENBQUMsQ0FBQztBQXRCVyxRQUFBLFVBQVUsY0FzQnJCO0FBRUssTUFBTSxvQkFBb0IsR0FBRyxDQUNoQyxPQUFVLEVBQ08sRUFBRTtJQUNuQixNQUFNLFFBQVEsR0FBUSxFQUFFLENBQUM7SUFDekIscUNBQXFDO0lBQ3JDLElBQUksT0FBTyxDQUFDLElBQUksRUFBRTtRQUNkLFFBQVEsQ0FBQyxJQUFJLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQztLQUNoQztJQUNELElBQUksT0FBTyxDQUFDLElBQUksRUFBRTtRQUNkLFFBQVEsQ0FBQyxJQUFJLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQztLQUNoQztJQUNELGdEQUFnRDtJQUNoRCxJQUFJLE9BQU8sQ0FBQyxRQUFRLEVBQUU7UUFDbEIsUUFBUSxDQUFDLFFBQVEsR0FBRyxPQUFPLENBQUMsUUFBUSxDQUFDO0tBQ3hDO0lBQ0QsSUFBSSxPQUFPLENBQUMsR0FBRyxFQUFFO1FBQ2IsUUFBUSxDQUFDLEdBQUcsR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDO0tBQzlCO0lBQ0QsSUFBSSxPQUFPLENBQUMsS0FBSyxFQUFFO1FBQ2YsUUFBUSxDQUFDLEtBQUssR0FBRyxPQUFPLENBQUMsS0FBSyxDQUFDO0tBQ2xDO0lBQ0QsSUFBSSxPQUFPLENBQUMsSUFBSSxFQUFFO1FBQ2QsUUFBUSxDQUFDLElBQUksR0FBRyxPQUFPLENBQUMsSUFBSSxDQUFDO0tBQ2hDO0lBQ0QsSUFBSSxPQUFPLENBQUMsS0FBSyxFQUFFO1FBQ2YsUUFBUSxDQUFDLEtBQUssR0FBRyxPQUFPLENBQUMsS0FBSyxDQUFDO0tBQ2xDO0lBQ0QsK0RBQStEO0lBQy9ELDREQUE0RDtJQUM1RCx5REFBeUQ7SUFDekQsa0VBQWtFO0lBQ2xFLE9BQU8sUUFBUSxDQUFDO0FBQ3BCLENBQUMsQ0FBQztBQWhDVyxRQUFBLG9CQUFvQix3QkFnQy9CIn0=