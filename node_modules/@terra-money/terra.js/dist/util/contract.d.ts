import { BlockTxBroadcastResult } from '../client/lcd/api/TxAPI';
import { TxInfo } from '../core/TxInfo';
/**
 * Serializes a JavaScript object to a Base64-encoded string. If the data passed is
 * already a string, it will not be serialized and just return as-is.
 *
 * @param data object to encode
 * @returns base64-encoded string
 */
export declare function dictToB64(data: any): string;
/**
 * Recovers a JavaScript object from a Base64-encoded JSON string. If an error is encountered
 * while parsing, the string will not be converted and fail by returning the input as-is.
 *
 * @param data string
 * @returns converted object
 */
export declare function b64ToDict(data: string): any;
export declare function getCodeId(txResult: BlockTxBroadcastResult | TxInfo, msgIndex?: number): string;
export declare function getContractAddress(txResult: BlockTxBroadcastResult | TxInfo, msgIndex?: number): string;
export interface ContractEvent {
    contract_address: string;
    [key: string]: string;
}
export declare function getContractEvents(txResult: BlockTxBroadcastResult | TxInfo, msgIndex?: number): ContractEvent[];
