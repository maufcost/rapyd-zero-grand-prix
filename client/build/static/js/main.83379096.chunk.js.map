{"version":3,"sources":["assets/rzero.svg","assets/default-user.png","components/Header/Header.js","components/Stats/data.js","components/Stats/Stats.js","assets/loading.svg","components/Loading/Loading.js","utils.js","assets/me.gif","assets/arabic-coffee-banner.jpeg","assets/coffee-prod.gif","assets/coffee2.jpeg","assets/coffee3.png","assets/shopping-cart.svg","components/Dashboard/Dashboard.js","components/Checkout/Checkout.js","components/Success/Success.js","components/SignOut/SignOut.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","RapydZeroLogo","alt","id","onClick","navigate","window","open","props","storeLink","DefaultUser","React","Component","data","name","Sales","Date","amt","App","LineChart","width","height","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","tick","YAxis","Tooltip","Legend","Line","type","stroke","activeDot","r","Loading","LoadingSVG","IMAGE","CUSTOM","NATIVE","Dashboard","state","paymentCurrency","selectedImage","selectedBanner","user","email","displayName","balanceNative","balanceBTC","balanceETH","store","storeProfileImage","DefaultStoreImage","storeProfileImageType","storeBannerImage","DefaultStoreBanner","storeProfileVideo","products","price","description","image","DefaultProd","DefaultProd2","DefaultProd3","selectedProduct","loading","loadingDisburse","transferSuccess","openAddNewProductSection","addProductName","addProductDescription","addProductPrice","copied","bankAccountNumber","rapydWalletNumber","transferAmount","currentDollarToBTCPrice","currentDollarToETHPrice","closeAdd","bind","saveStore","getStoreLink","transferMoney","fromDollarToBTC","fromDollarToETH","addProductToStore","handleAddStoreImage","handleAddStoreBanner","handleProductSelection","handleStoreImageSubmission","handleStoreBannerSubmission","handlePaymentCurrencyChange","this","setState","e","target","value","files","length","file","split","n","i","j","toLowerCase","Price","getCryptoPrice","then","obj","console","log","toFixed","catch","err","trim","push","currency","setTimeout","options","yourProducts","map","product","ix","transferBtnClassName","parseInt","htmlFor","onChange","placeholder","autoComplete","min","text","onCopy","ShoppingCart","disabled","checked","preventDefault","Checkout","pk","paymentSuccessful","loadingPay","processPurchase","a","amount","axios","get","res","storeDisplayName","storeBanner","style","marginTop","Success","location","curr","productDisplayName","SignOut","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.83379096.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/rzero.81e78d44.svg\";","export default __webpack_public_path__ + \"static/media/default-user.0cdde5f6.png\";","import React from 'react';\nimport { navigate } from '@reach/router';\n\nimport RapydZeroLogo from '../../assets/rzero.svg';\nimport DefaultUser from '../../assets/default-user.png';\n\nimport './Header.css';\n\nclass Header extends React.Component {\n    render() {\n        return (\n            <div className='header-container'>\n                <div className='header'>\n                    <img src={RapydZeroLogo} className='logo' alt='Rapyd X' />\n                    <div className='nav'>\n                        <button id='home-btn' onClick={() => navigate('/')}>Home</button>\n                        <button\n\t\t\t\t\t\t\tclassName='special'\n\t\t\t\t\t\t\tonClick={() => window.open(this.props.storeLink)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<img src={DefaultUser} className='user-pic' alt='User' />\n\t\t\t\t\t\t\tPreview My Store\n\t\t\t\t\t\t</button>\n                        <button onClick={() => navigate('/see-you-soon')}>Sign out</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Header;\n","export const data = [\n  {\n    name: 'Monday',\n    Sales: 2,\n    Date: 2123,\n    amt: 2400,\n  },\n  {\n    name: 'Tuesday',\n    Sales: 461,\n    Date: 3921,\n    amt: 2210,\n  },\n  {\n    name: 'Wednesday',\n    Sales: 4,\n    Date: 3921,\n    amt: 2290,\n  },\n  {\n    name: 'Thursday',\n    Sales: 78,\n    Date: 312,\n    amt: 2000,\n  },\n  {\n    name: 'Friday',\n    Sales: 18,\n    Date: 9123,\n    amt: 2181,\n  },\n  {\n    name: 'Saturday',\n    Sales: 84,\n    Date: 123,\n    amt: 2500,\n  },\n  {\n    name: 'Sunday',\n    Sales: 120,\n    Date: 31,\n    amt: 2100,\n  },\n];\n","import React from \"react\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend\n} from \"recharts\";\n\nimport { data } from './data.js';\n\nexport default function App() {\n\t//{/* 300 -> 420*/}\n  return (\n    <LineChart\n      width={420}\n      height={180}\n      data={data}\n      margin={{\n        top: 20,\n        right: 30,\n        left: 20,\n        bottom: -15\n      }}\n\t  className='graph'\n    >\n      <CartesianGrid strokeDasharray=\"3 3\" />\n      <XAxis dataKey=\"name\" tick={false} />\n      <YAxis />\n      <Tooltip />\n      <Legend />\n      <Line\n        type=\"monotone\"\n        dataKey=\"Sales\"\n        stroke=\"#73e686\"\n        activeDot={{ r: 8 }}\n      />\n      <Line type=\"monotone\" dataKey=\"Date\" stroke=\"#034dbe\" />\n    </LineChart>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/loading.7abb9f64.svg\";","import React from 'react';\n\nimport LoadingSVG from '../../assets/loading.svg';\n\nclass Loading extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<span className='loading-container'>\n\t\t\t\t<img className='lg' src={LoadingSVG} alt='Loading' />\n\t\t\t</span>\n\t\t)\n\t}\n}\n\nexport default Loading;\n","export const IMAGE = 'image';\nexport const VIDEO = 'video';\nexport const CUSTOM = 'custom';\nexport const NATIVE = 'USD'; // By default\nexport const ROOT = 'http://localhost:3000';\n","export default __webpack_public_path__ + \"static/media/me.ee3262ef.gif\";","export default __webpack_public_path__ + \"static/media/arabic-coffee-banner.5e52387e.jpeg\";","export default __webpack_public_path__ + \"static/media/coffee-prod.a451a6a8.gif\";","export default __webpack_public_path__ + \"static/media/coffee2.3cb58225.jpeg\";","export default __webpack_public_path__ + \"static/media/coffee3.06ecbca4.png\";","export default __webpack_public_path__ + \"static/media/shopping-cart.b2512c95.svg\";","import React from 'react';\nimport Price from 'crypto-price';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\n\nimport Header from '../Header/Header';\nimport Stats from '../Stats/Stats';\nimport Loading from '../Loading/Loading';\n\nimport { IMAGE, VIDEO, CUSTOM, NATIVE, ROOT } from '../../utils';\nimport DefaultStoreImage from '../../assets/me.gif';\nimport DefaultStoreBanner from '../../assets/arabic-coffee-banner.jpeg';\nimport DefaultProd from '../../assets/coffee-prod.gif';\nimport DefaultProd2 from '../../assets/coffee2.jpeg';\nimport DefaultProd3 from '../../assets/coffee3.png'\nimport ShoppingCart from '../../assets/shopping-cart.svg';\nimport RapydZeroLogo from '../../assets/rzero.svg';\n\nimport './Dashboard.css';\n\n// To fetch:\n\n// User's display name\n// User's email\n// storeId\n// Balance in native currency\n// Balance in bitcoin\n// Balance in Ether\n\n// Store profile image type (image or video)\n// Store profile image src\n// Store products (to fill the options in the <select>)\n// Each store product should have a price, display name, description, and image\n\nclass Dashboard extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // this.state = {};\n\n\t\t// Mock store\n        this.state = {\n            paymentCurrency: '$', // By default\n            selectedImage: null,\n            selectedBanner: null,\n            user: {\n                email: 'michaelscott@dundermifflin.com',\n                displayName: 'Mauricio Costa',\n                balanceNative: 131.92,\n                balanceBTC: 0.00001,\n                balanceETH: 0.000025,\n                store: {\n                    displayName: 'Arabic Coffee by MC',\n                    storeProfileImage: DefaultStoreImage,\n                    storeProfileImageType: IMAGE,\n                    storeBannerImage: DefaultStoreBanner,\n                    storeProfileVideo: null,\n                    products: [\n                        {\n                            price: 25.00,\n                            displayName: 'Hazelnut Arabic Beans',\n                            description: 'Taste it and be your best self ☕',\n                            image: DefaultProd\n                        },\n                        {\n                            price: 35.45,\n                            displayName: 'Cinnamon Arabic Beans',\n                            description: 'Just the right amount of cinnamon and sugar 👨‍🍳 ☕',\n                            image: DefaultProd2\n                        },\n                        {\n                            price: 19.99,\n                            displayName: 'Original Arabic Beans',\n                            description: 'Going traditional is always a great idea ☕',\n                            image: DefaultProd3\n                        }\n                    ]\n                }\n            },\n            selectedProduct: 0,\n            loading: true,\n\t\t\tloadingDisburse: false,\n\t\t\ttransferSuccess: false,\n            openAddNewProductSection: false,\n            addProductName: '',\n            addProductDescription: '',\n            addProductPrice: 1,\n            copied: false,\n\t\t\tbankAccountNumber: '',\n\t\t\trapydWalletNumber: '',\n\t\t\ttransferAmount: '',\n            currentDollarToBTCPrice: null,\n            currentDollarToETHPrice: null\n        };\n\n\t\tthis.closeAdd = this.closeAdd.bind(this);\n        this.saveStore = this.saveStore.bind(this);\n        this.getStoreLink = this.getStoreLink.bind(this);\n\t\tthis.transferMoney = this.transferMoney.bind(this);\n        this.fromDollarToBTC = this.fromDollarToBTC.bind(this);\n        this.fromDollarToETH = this.fromDollarToETH.bind(this);\n        this.addProductToStore = this.addProductToStore.bind(this);\n        this.handleAddStoreImage = this.handleAddStoreImage.bind(this);\n        this.handleAddStoreBanner = this.handleAddStoreBanner.bind(this);\n        this.handleProductSelection = this.handleProductSelection.bind(this);\n        this.handleStoreImageSubmission = this.handleStoreImageSubmission.bind(this);\n        this.handleStoreBannerSubmission = this.handleStoreBannerSubmission.bind(this);\n        this.handlePaymentCurrencyChange = this.handlePaymentCurrencyChange.bind(this);\n    }\n\n    componentDidMount() {\n        this.setState({ loading: false });\n    }\n\n    handleProductSelection(e) {\n        this.setState({ selectedProduct: e.target.value });\n    }\n\n    saveStore() {}\n\n    handleStoreImageSubmission(e) {\n        const files = e.target.files;\n        if (files && typeof files !== 'undefined' && files.length > 0) {\n            const file = files[0];\n\t\t\tthis.setState({ storeProfileImage: file });\n        }\n    }\n\n    handleStoreBannerSubmission(e) {\n        const files = e.target.files;\n        if (files && typeof files !== 'undefined' && files.length > 0) {\n            const file = files[0];\n\t\t\tthis.setState({ storeBannerImage: file });\n        }\n    }\n\n    handleAddStoreImage() {}\n\n    handleAddStoreBanner() {}\n\n\tcloseAdd() {\n\t\tthis.setState({ openAddNewProductSection: false });\n\t}\n\n    // Generates a compact store link based on the user's store name.\n    getStoreLink() {\n        const name = this.state.user.store.displayName.split(\" \");\n        let n = '';\n        for (let i = 0; i < name.length; i++) {\n            for (let j = 0; j < name[i].length; j++) {\n                n += name[i][j].toLowerCase();\n            }\n        }\n        return `${ROOT}/store/${n}`;\n    }\n\n    fromDollarToBTC(price) {\n        this.setState({ loading: true });\n        // Converts USD to BTC\n        Price.getCryptoPrice('USD', 'BTC').then(obj => {\n            // 1 BTC === obj.price USD\n            console.log(price/obj.price)\n            this.setState({ loading: false, currentDollarToBTCPrice: (price / obj.price).toFixed(6) });\n        }).catch(err => console.log(err));\n    }\n\n    fromDollarToETH(price) {\n        this.setState({ loading: true });\n        // Converts USD to ETH\n        Price.getCryptoPrice('USD', 'ETH').then(obj => {\n            // 1 ETH === obj.price USD\n            console.log(price/obj.price)\n            this.setState({ loading: false, currentDollarToETHPrice: (price / obj.price).toFixed(6) });\n        }).catch(err => console.log(err));\n    }\n\n    // Adds a product to the user's store.\n    addProductToStore() {\n        if (this.state.addProductName.trim() !== '' && this.state.addProductDescription.trim() !== '') {\n            let products = this.state.user.store.products;\n            products.push({\n                price: this.state.addProductPrice,\n                displayName: this.state.addProductName.trim(),\n                description: this.state.addProductDescription.trim(),\n                image: DefaultProd\n            });\n            this.setState({\n                user: {\n                    store: { ...this.state.user.store, products },\n                    ...this.state.user\n                },\n\t\t\t\taddProductName: '',\n\t\t\t\taddProductDescription: '',\n\t\t\t\taddProductPrice: 0,\n\t\t\t\topenAddNewProductSection: false\n            });\n        }\n    }\n\n    handlePaymentCurrencyChange(currency) {\n        this.setState({ paymentCurrency: currency });\n\n        // Price in the native currency (USD).\n        const price = this.state.user.store.products[this.state.selectedProduct].price;\n        if (currency === 'BTC') {\n            this.fromDollarToBTC(price);\n        } else if (currency === 'ETH') {\n            this.fromDollarToETH(price);\n        } else {\n            // Native currency ($ -> USD)\n        }\n    }\n\n\ttransferMoney() {\n\t\tthis.setState({ loadingDisburse: true });\n\t\tsetTimeout(() => {\n\t\t\tthis.setState({\n\t\t\t\tloadingDisburse: false,\n\t\t\t\ttransferSuccess: true,\n\t\t\t\tbankAccountNumber: '',\n\t\t\t\trapydWalletNumber: '',\n\t\t\t\ttransferAmount: ''\n\t\t\t});\n\t\t}, 3000);\n\t}\n\n    render() {\n        // Creating the <option>s for the store.\n        let options = [], yourProducts = [];\n        if (this.state.user && this.state.user.store && this.state.user.store.products.length > 0) {\n            options = this.state.user.store.products.map((product, ix) => {\n                return <option key={ix} value={ix}>{product.displayName}</option>\n            });\n\n            options.push(\n                <option key={this.state.user.store.products.length} value={CUSTOM}>\n                    Custom value\n                </option>\n            );\n\n            yourProducts = this.state.user.store.products.map((product, ix) => {\n                return (\n                    <div key={ix} className='added-product'>\n                        <span>{product.displayName}</span>\n                        <span>{product.description}</span>\n                        <span>{product.price}</span>\n                    </div>\n                )\n            });\n        }\n\n\t\tlet transferBtnClassName = 'transfer-btn';\n\t\ttransferBtnClassName += this.state.transferSuccess ? ' dg' : '';\n\n        return (\n            <div className='dashboard-container'>\n                <Header\n                    storeLink={this.getStoreLink()}\n                />\n                <div className='dashboard'>\n\n                    {/* Shows a brief greeting + user balances */}\n                    <div className='greetings'>\n                        <h2 className='welcome'>Welcome back 👋</h2>\n\t\t\t\t\t\t<h2 className='name'>{this.state.user.displayName}</h2>\n\t\t\t\t\t\t<main className='greetings-main'>\n\t                        <div className='balances'>\n\t\t\t\t\t\t\t\t<h3>Your store balance is:</h3>\n\t\t\t\t\t\t\t\t<section>\n\t\t                            <div className='balance'>\n\t\t                                <span>Your native currency <span className='curr'>USD</span></span>\n\t\t                                <p>${parseInt(this.state.user.balanceNative).toFixed(2)}</p>\n\t\t                            </div>\n\t\t                            <div className='balance'>\n\t\t                                <span>Bitcoin balance <span className='curr'>BTC</span></span>\n\t\t                                <p>BTC {this.state.user.balanceBTC}</p>\n\t\t                            </div>\n\t\t                            <div className='balance'>\n\t\t                                <span>Ether balance <span className='curr'>ETH</span></span>\n\t\t                                <p>ETH {this.state.user.balanceETH}</p>\n\t\t                            </div>\n\t\t\t\t\t\t\t\t</section>\n\t                        </div>\n\t\t\t\t\t\t\t<Stats />\n\t\t\t\t\t\t</main>\n                    </div>\n\n                    {/* Space to edit user's store and add products to the store */}\n                    <div className='edit'>\n                        <div className='products-added'>\n                            <h2>Add new products to your store in real-time</h2>\n\n                            {this.state.openAddNewProductSection ? (\n                                <section className='add-products-section'>\n                                    <button\n                                        className='close-btn'\n                                        onClick={this.closeAdd}\n                                    >\n                                        Close\n                                    </button>\n\n                                    <label htmlFor='add-product-display-name'>Name: </label>\n                                    <input\n                                        id='add-product-display-name'\n                                        type='text'\n                                        value={this.state.addProductName}\n                                        onChange={e => this.setState({ addProductName: e.target.value })}\n                                        placeholder='Cat Box Pro 2000'\n\t\t\t\t\t\t\t\t\t\tautoComplete='off'\n                                    ></input>\n\n                                    <label htmlFor='add-product-description'>Description: </label>\n                                    <input\n                                        id='add-product-description'\n                                        type='text'\n                                        value={this.state.addProductDescription}\n                                        onChange={e => this.setState({ addProductDescription: e.target.value })}\n                                        placeholder='The only one you will ever need'\n\t\t\t\t\t\t\t\t\t\tautoComplete='off'\n                                    ></input>\n\n                                    <label htmlFor='add-product-price'>Price $</label>\n                                    <input\n                                        id='add-product-price'\n                                        type='number'\n                                        value={this.state.addProductPrice}\n                                        onChange={e => this.setState({ addProductPrice: e.target.value })}\n                                        min='1'\n\t\t\t\t\t\t\t\t\t\tautoComplete='off'\n                                    ></input>\n\t\t\t\t\t\t\t\t\t<button className='add-product-btn' onClick={this.handleAddStoreImage}>Add product image </button>\n                                    <button className='add-product-btn' onClick={this.addProductToStore}>🤘 Add product</button>\n                                </section>\n                            ) : (\n                                <button onClick={() => this.setState({ openAddNewProductSection: true })}>Add a new product to my store</button>\n                            )}\n\n                            <div className='your-products'>\n                                <p>Products you have already added</p>\n                                <div className='your-products-list'>{yourProducts}</div>\n                            </div>\n                        </div>\n\n                        <div className='edit-header'>\n                            <h3>Customize your store</h3>\n                            <p>It's a great idea to customize your store before sending your personal link to your customers</p>\n                        </div>\n\n                        <div className='store'>\n                            <header>\n                                <div className='banner-wrapper'>\n                                    {this.state.user.store.storeBannerImage && (\n                                        <img src={this.state.user.store.storeBannerImage} alt='Store banner' />\n                                    )}\n                                </div>\n\n                                {this.state.user.store.storeProfileImageType === IMAGE &&\n                                 this.state.user.store.storeProfileImage && (\n                                     <div className='circle'>\n                                        <div className='store-profile-image-wrapper'>\n                                            <img className='store-profile-image' src={this.state.user.store.storeProfileImage} alt='Store' />\n                                        </div>\n                                     </div>\n                                )}\n\n                                {this.state.user.store.storeProfileImageType === IMAGE &&\n                                 !this.state.user.store.storeProfileImage && (\n                                    <div className='store-no-image'></div>\n                                )}\n\n                                <footer className='header-footer'>\n                                    <h2 className='store-display-name'>{this.state.user.store.displayName}</h2>\n\n                                    <div className='buttons'>\n                                        <button className='btn-add-store-image' onClick={this.handleAddStoreImage}>\n                                            {this.state.selectedImage ? (\n                                                <span>✅ Profile image selected</span>\n                                            ) : (\n                                                <span>Add store's profile image</span>\n                                            )}\n                                            <input type='file' onChange={this.handleStoreImageSubmission} />\n                                        </button>\n\n                                        <button className='btn-add-store-image' onClick={this.handleAddStoreBanner}>\n                                            {this.state.selectedBanner ? (\n                                                <span>✅ Banner selected</span>\n                                            ) : (\n                                                <span>Add store banner</span>\n                                            )}\n                                            <input type='file' onChange={this.handleStoreBannerSubmission} />\n                                        </button>\n\n                                        <CopyToClipboard text={this.getStoreLink()}\n                                            onCopy={() => this.setState({ copied: true })}>\n                                            <button>\n                                                {this.state.copied ? (\n                                                    <span>✅ Store link copied</span>\n                                                ) : (\n                                                    <span>Get store link</span>\n                                                )}\n                                            </button>\n                                        </CopyToClipboard>\n\n                                        <button onClick={this.saveStore}>Save store</button>\n                                    </div>\n                                </footer>\n                            </header>\n                            <main>\n                                <div className='store-main-left'>\n\t\t\t\t\t\t\t\t\t<div className='store-main-left-top'>\n                                    \t<select onChange={this.handleProductSelection}>{options}</select>\n\t\t\t\t\t\t\t\t\t\t<img className='cart' src={ShoppingCart} alt='Shopping cart' />\n\t\t\t\t\t\t\t\t\t</div>\n                                    <div className='product'>\n                                        <h4>{this.state.user.store.products[this.state.selectedProduct].displayName}</h4>\n                                        <p className='description'>{this.state.user.store.products[this.state.selectedProduct].description}</p>\n                                        <p className='price'>\n                                            {this.state.loading ? (\n                                                <Loading />\n                                            ) : (\n                                                <span>\n                                                    {this.state.paymentCurrency}&nbsp;\n                                                    {this.state.paymentCurrency === '$' && parseInt(this.state.user.store.products[this.state.selectedProduct].price).toFixed(2)}\n                                                    {this.state.paymentCurrency === 'BTC' && this.state.currentDollarToBTCPrice}\n                                                    {this.state.paymentCurrency === 'ETH' && this.state.currentDollarToETHPrice}\n                                                </span>\n                                            )}\n                                        </p>\n                                        <img src={this.state.user.store.products[this.state.selectedProduct].image} alt='Product'/>\n                                    </div>\n                                    <footer className='powered'>\n                                        <p>Powered by <img src={RapydZeroLogo} alt='Rapyd'/></p>\n                                    </footer>\n                                </div>\n                                <div className='store-main-right'>\n                                    <label htmlFor='email'>Email</label>\n                                    <input\n                                        id='email'\n                                        type='text'\n                                        placeholder='E.g. michaelscott@dundermifflin.com'\n                                        disabled\n\t\t\t\t\t\t\t\t\t\tautoComplete='off'\n                                    />\n                                    {/* Credit card part -- waiting to have access to Rapyd */}\n                                    <div className='payment-types'>\n                                        <input\n                                            id='native'\n                                            type='radio'\n                                            name='currency-type'\n                                            value={NATIVE}\n                                            onChange={() => this.handlePaymentCurrencyChange('$')}\n                                            checked={this.state.paymentCurrency === '$'}\n                                        />\n                                        <label htmlFor='native'>{NATIVE}</label>\n                                        <input\n                                            id='BTC'\n                                            type='radio'\n                                            name='currency-type'\n                                            value='BTC'\n                                            onChange={() => this.handlePaymentCurrencyChange('BTC')}\n                                            checked={this.state.paymentCurrency === 'BTC'}\n                                        />\n                                        <label htmlFor='BTC'>BTC</label>\n                                        <input\n                                            id='ETH'\n                                            type='radio'\n                                            name='currency-type'\n                                            value='ETH'\n                                            onChange={() => this.handlePaymentCurrencyChange('ETH')}\n                                            checked={this.state.paymentCurrency === 'ETH'}\n                                        />\n                                        <label htmlFor='ETH'>ETH</label>\n                                        <button className='pay-btn' onClick={e => e.preventDefault()}>\n                                            {this.state.loading ? (\n                                            \t<Loading />\n                                            ) : (\n                                                <span>\n                                                    💰 &nbsp;Pay {this.state.paymentCurrency}&nbsp;\n                                                    {this.state.paymentCurrency === '$' && parseInt(this.state.user.store.products[this.state.selectedProduct].price).toFixed(2)}\n                                                    {this.state.paymentCurrency === 'BTC' && this.state.currentDollarToBTCPrice}\n                                                    {this.state.paymentCurrency === 'ETH' && this.state.currentDollarToETHPrice}\n                                                </span>\n                                            )}\n                                        </button>\n                                    </div>\n                                </div>\n                            </main>\n                        </div>\n\t\t\t\t\t\t<div className='disburse'>\n\t\t\t\t\t\t\t<h2>Disburse now</h2>\n\t\t\t\t\t\t\t<p>Register your bank account and transfer money from your Rapyd wallet and store balance.</p>\n\t\t\t\t\t\t\t<section>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<label>Bank account #:</label>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\tvalue={this.state.bankAccountNumber}\n\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\tonChange={e => this.setState({ bankAccountNumber: e.target.value })}\n\t\t\t\t\t\t\t\t\t\tautoComplete='off'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<label>Rapyd wallet #:</label>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\tvalue={this.state.rapydWalletNumber}\n\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\tonChange={e => this.setState({ rapydWalletNumber: e.target.value })}\n\t\t\t\t\t\t\t\t\t\tautoComplete='off'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<small>Don't worry! We automatically generated one for you.</small>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<label>Amount:</label>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\tvalue={this.state.transferAmount}\n\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\tonChange={e => this.setState({ transferAmount: e.target.value })}\n\t\t\t\t\t\t\t\t\t\tautoComplete='off'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName={transferBtnClassName}\n\t\t\t\t\t\t\t\t\tonClick={this.transferMoney}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{this.state.loadingDisburse ? (\n\t\t\t\t\t\t\t\t\t\t<Loading />\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t{this.state.transferSuccess ? (\n\t\t\t\t\t\t\t\t\t\t\t\t<span>Transfer Succeeded ✅</span>\n\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t<span>Transfer</span>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</section>\n\t\t\t\t\t\t</div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Dashboard;\n","import React from 'react';\nimport Price from 'crypto-price';\nimport axios from 'axios';\nimport { navigate } from '@reach/router';\n\nimport { IMAGE, VIDEO, CUSTOM, NATIVE } from '../../utils';\nimport DefaultStoreImage from '../../assets/me.gif';\nimport DefaultStoreBanner from '../../assets/arabic-coffee-banner.jpeg';\nimport DefaultProd from '../../assets/coffee-prod.gif';\nimport DefaultProd2 from '../../assets/coffee2.jpeg';\nimport DefaultProd3 from '../../assets/coffee3.png'\nimport DefaultUser from '../../assets/default-user.png';\nimport ShoppingCart from '../../assets/shopping-cart.svg';\nimport Loading from '../Loading/Loading';\nimport RapydZeroLogo from '../../assets/rzero.svg';\n\nimport './Checkout.css';\n\nclass Checkout extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // this.state = {};\n        this.state = {\n            paymentCurrency: '$', // By default\n            selectedImage: null,\n            selectedBanner: null,\n            user: {\n                email: 'michaelscott@dundermifflin.com',\n                displayName: 'Michael Scott',\n                balanceNative: 100,\n                balanceBTC: 0.00001,\n                balanceETH: 0.000025,\n                store: {\n                    displayName: 'Arabic Coffee by MC',\n                    storeProfileImage: DefaultStoreImage,\n                    storeProfileImageType: IMAGE,\n                    storeBannerImage: DefaultStoreBanner,\n                    storeProfileVideo: null,\n\t\t\t\t\tproducts: [\n                        {\n                            price: 25.00,\n                            displayName: 'Hazelnut Arabic Beans',\n                            description: 'Taste it and be your best self ☕',\n                            image: DefaultProd\n                        },\n                        {\n                            price: 35.45,\n                            displayName: 'Cinnamon Arabic Beans',\n                            description: 'Just the right amount of cinnamon and sugar 👨‍🍳 ☕',\n                            image: DefaultProd2\n                        },\n                        {\n                            price: 19.99,\n                            displayName: 'Original Arabic Beans',\n                            description: 'Going traditional is always a great idea ☕',\n                            image: DefaultProd3\n                        }\n                    ]\n                }\n            },\n            email: '',\n            pk: '',\n\t\t\tpaymentSuccessful: false,\n            selectedProduct: 0,\n            loading: true,\n\t\t\tloadingPay: false,\n            currentDollarToBTCPrice: null,\n            currentDollarToETHPrice: null\n        };\n\n        this.processPurchase = this.processPurchase.bind(this);\n        this.fromDollarToBTC = this.fromDollarToBTC.bind(this);\n        this.fromDollarToETH = this.fromDollarToETH.bind(this);\n\t\tthis.handleProductSelection = this.handleProductSelection.bind(this);\n        this.handlePaymentCurrencyChange = this.handlePaymentCurrencyChange.bind(this);\n    }\n\n    componentDidMount() {\n        this.setState({ loading: false });\n    }\n\n\thandleProductSelection(e) {\n        this.setState({ selectedProduct: e.target.value });\n    }\n\n    // Sending a purchase request to our node.js server.\n    async processPurchase(e) {\n        e.preventDefault();\n        this.setState({ loadingPay: true });\n\n        let amount = this.state.user.store.products[this.state.selectedProduct].price // In native currency (USD)\n        if (this.state.paymentCurrency === 'BTC') {\n            amount = this.state.currentDollarToBTCPrice;\n        } else if (this.state.paymentCurrency === 'ETH') {\n            amount = this.state.currentDollarToETHPrice;\n        }\n\n        // The amount is sent based on the selected payment currency type.\n        // If BTC selected, then the amount sent will be in BTC\n        await axios.get('http://localhost:5000/rapyd-test', {\n            paymentCurrency: this.state.paymentCurrency,\n            amount\n        })\n\t\t.then(res => {\n\t\t\tconsole.log(res);\n\t\t});\n\n\t\t// @WARNING: For testing purposes only:\n\t\t// setTimeout(() => {\n\t\t// \tnavigate('https://sandboxcheckout.rapyd.net?token=checkout_0e110b8b10eec1b311377888cf3f229d')\n\t\t// }, 3000);\n\n        // this.setState({ loadingPay: false });\n        // Redirecting user to success page with data about the purchased product\n        // and its store.\n        navigate('/success', {\n            state: {\n                storeDisplayName: this.state.user.store.displayName,\n                product: this.state.user.store.products[this.state.selectedProduct],\n                paymentCurrency: this.state.paymentCurrency,\n                amount,\n                storeProfileImage: DefaultStoreImage,\n                storeBanner: DefaultStoreBanner,\n                pk: this.state.pk\n            }\n        })\n    }\n\n    fromDollarToBTC(price) {\n        this.setState({ loading: true });\n        // Converts USD to BTC\n        Price.getCryptoPrice('USD', 'BTC').then(obj => {\n            // 1 BTC === obj.price USD\n            console.log(price/obj.price)\n            this.setState({ loading: false, currentDollarToBTCPrice: (price / obj.price).toFixed(6) });\n        }).catch(err => console.log(err));\n    }\n\n    fromDollarToETH(price) {\n        this.setState({ loading: true });\n        // Converts USD to ETH\n        Price.getCryptoPrice('USD', 'ETH').then(obj => {\n            // 1 ETH === obj.price USD\n            console.log(price/obj.price)\n            this.setState({ loading: false, currentDollarToETHPrice: (price / obj.price).toFixed(6) });\n        }).catch(err => console.log(err));\n    }\n\n    handlePaymentCurrencyChange(currency) {\n        this.setState({ paymentCurrency: currency });\n\n        // Price in the native currency (USD).\n        const price = this.state.user.store.products[this.state.selectedProduct].price;\n        if (currency === 'BTC') {\n            this.fromDollarToBTC(price);\n        } else if (currency === 'ETH') {\n            this.fromDollarToETH(price);\n        } else {\n            // Native currency ($ -> USD)\n        }\n    }\n\n    render() {\n        // Building the store's product options.\n        let options = [];\n        if (this.state.user.store && this.state.user.store.products.length > 0) {\n            options = this.state.user.store.products.map((product, ix) => {\n                return <option key={ix} value={ix}>{product.displayName}</option>\n            });\n\n            options.push(\n                <option key={this.state.user.store.products.length} value={CUSTOM}>\n                    Custom value\n                </option>\n            );\n        }\n\n        return (\n            <div className='store-container'>\n                <div className='store-checkout'>\n                    <header>\n                        <div className='banner-wrapper'>\n                            {this.state.user.store.storeBannerImage && (\n                                <img src={this.state.user.store.storeBannerImage} alt='Store banner' />\n                            )}\n                        </div>\n\n                        {this.state.user.store.storeProfileImageType === IMAGE &&\n                         this.state.user.store.storeProfileImage && (\n                             <div className='circle'>\n                                <div className='store-profile-image-wrapper'>\n                                    <img className='store-profile-image' src={this.state.user.store.storeProfileImage} alt='Store' />\n                                </div>\n                             </div>\n                        )}\n\n                        {this.state.user.store.storeProfileImageType === IMAGE &&\n                         !this.state.user.store.storeProfileImage && (\n                            <div className='store-no-image'></div>\n                        )}\n\n                        <footer className='header-footer-checkout'>\n                            <h2 className='store-display-name-checkout'>\n\t\t\t\t\t\t\t\t{this.state.user.store.displayName}\n\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t\t<span>Created by <img src={DefaultUser} className='user-pic' alt='User' /> Mauricio Costa</span>\n                        </footer>\n                    </header>\n                    <main>\n                        <div className='store-main-left'>\n\t\t\t\t\t\t\t<div className='store-main-left-top'>\n                            \t<select onChange={this.handleProductSelection}>{options}</select>\n\t\t\t\t\t\t\t\t<img className='cart' src={ShoppingCart} alt='Shopping cart' />\n\t\t\t\t\t\t\t</div>\n                            <div className='product'>\n                                <h4>{this.state.user.store.products[this.state.selectedProduct].displayName}</h4>\n                                <p className='description'>{this.state.user.store.products[this.state.selectedProduct].description}</p>\n                                <p className='price'>\n                                    {this.state.loading ? (\n                                        <Loading />\n                                    ) : (\n                                        <span>\n                                            {this.state.paymentCurrency}&nbsp;\n                                            {this.state.paymentCurrency === '$' && parseInt(this.state.user.store.products[this.state.selectedProduct].price).toFixed(2)}\n                                            {this.state.paymentCurrency === 'BTC' && this.state.currentDollarToBTCPrice}\n                                            {this.state.paymentCurrency === 'ETH' && this.state.currentDollarToETHPrice}\n                                        </span>\n                                    )}\n                                </p>\n                                <img src={this.state.user.store.products[this.state.selectedProduct].image} alt='Product'/>\n                            </div>\n\t\t\t\t\t\t\t<footer className='powered'>\n\t\t\t\t\t\t\t\t<p>Powered by <img src={RapydZeroLogo} alt='Rapyd'/></p>\n\t\t\t\t\t\t\t</footer>\n                        </div>\n                        <div className='store-main-right'>\n                            <label htmlFor='email'>Email</label>\n                            <input\n                                id='email'\n                                type='text'\n                                placeholder='E.g. michaelscott@dundermifflin.com'\n                                value={this.state.email}\n                                onChange={(e) => this.setState({ email: e.target.value })}\n                                disabled={this.state.loading}\n\t\t\t\t\t\t\t\tautoComplete='off'\n                            />\n                            {this.state.paymentCurrency !== '$' && (\n                                <div className='pk-input-wrapper' style={{ marginTop: '8px' }}>\n                                    <label htmlFor='pk'>Wallet's Private Key</label>\n                                    <input\n                                        id='pk'\n                                        type='text'\n                                        placeholder='E.g. 3387418aaddb4927209...'\n                                        value={this.state.pk}\n                                        onChange={(e) => this.setState({ pk: e.target.value })}\n                                        disabled={this.state.loading}\n\t\t\t\t\t\t\t\t\t\tautoComplete='off'\n                                    />\n                                </div>\n                            )}\n                            {/* Credit card part -- waiting to have access to Rapyd */}\n                            <div className='payment-types' style={{ marginTop: '8px' }}>\n                                <input\n                                    id='native'\n                                    type='radio'\n                                    name='currency-type'\n                                    value={NATIVE}\n                                    onChange={() => this.handlePaymentCurrencyChange('$')}\n                                    checked={this.state.paymentCurrency === '$'}\n                                    disabled={this.state.loading}\n                                />\n                                <label htmlFor='native'>{NATIVE}</label>\n                                <input\n                                    id='BTC'\n                                    type='radio'\n                                    name='currency-type'\n                                    value='BTC'\n                                    onChange={() => this.handlePaymentCurrencyChange('BTC')}\n                                    checked={this.state.paymentCurrency === 'BTC'}\n                                    disabled={this.state.loading}\n                                />\n                                <label htmlFor='BTC'>BTC</label>\n                                <input\n                                    id='ETH'\n                                    type='radio'\n                                    name='currency-type'\n                                    value='ETH'\n                                    onChange={() => this.handlePaymentCurrencyChange('ETH')}\n                                    checked={this.state.paymentCurrency === 'ETH'}\n                                    disabled={this.state.loading}\n                                />\n                                <label htmlFor='ETH'>ETH</label>\n                                <button\n                                    className='pay-btn'\n                                    onClick={this.processPurchase}\n                                    disabled={this.state.loading}\n                                >\n                                {this.state.loadingPay ? (\n                                    <Loading />\n                                ) : (\n                                    <span>\n                                        <span id='emoji'>💰</span> &nbsp;Pay {this.state.paymentCurrency}&nbsp;\n                                        {this.state.paymentCurrency === '$' && parseInt(this.state.user.store.products[this.state.selectedProduct].price).toFixed(2)}\n                                        {this.state.paymentCurrency === 'BTC' && this.state.currentDollarToBTCPrice}\n                                        {this.state.paymentCurrency === 'ETH' && this.state.currentDollarToETHPrice}\n                                    </span>\n                                )}\n                                </button>\n                            </div>\n                        </div>\n                    </main>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Checkout;\n","import React from 'react';\nimport { navigate } from '@reach/router';\n\nimport './Success.css'\n\nclass Success extends React.Component {\n\trender() {\n\t\tconsole.log(this.props.location.state)\n\t\t// Parsing data from purchased product and its store.\n\t\tconst curr = this.props.location.state.paymentCurrency;\n\t\tconst amount = this.props.location.state.amount\n\t\tconst productDisplayName = this.props.location.state.product.displayName;\n\n\t\treturn (\n\t\t\t<div className='success-container'>\n\t\t\t\t<div className='success'>\n\t\t\t\t\t<header>\n\t\t\t\t\t\t<div className='banner-wrapper'>\n\t\t\t\t\t\t\t{this.props.location.state.storeBanner && (\n\t\t\t\t\t\t\t\t<img src={this.props.location.state.storeBanner} alt='Store banner' />\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t{this.props.location.state.storeProfileImage && (\n\t\t\t\t\t\t\t <div className='circle'>\n\t\t\t\t\t\t\t\t<div className='store-profile-image-wrapper'>\n\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\tclassName='store-profile-image'\n\t\t\t\t\t\t\t\t\t\tsrc={this.props.location.state.storeProfileImage}\n\t\t\t\t\t\t\t\t\t\talt='Store'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t </div>\n\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t{!this.props.location.state.storeProfileImage && (\n\t\t\t\t\t\t\t<div className='store-no-image'></div>\n\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t<footer className='header-footer-checkout'>\n\t\t\t\t\t\t\t<h2 className='store-display-name-checkout'>{this.props.location.state.storeDisplayName}</h2>\n\t\t\t\t\t\t</footer>\n\t\t\t\t\t</header>\n\t\t\t\t\t<section>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tCongratulations! 🎉\n\t\t\t\t\t\t\tYou just bought {productDisplayName} for {curr}&nbsp;{amount} from&nbsp;\n\t\t\t\t\t\t\t{this.props.location.state.storeDisplayName}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<small>We emailed your receipt to your email. Have a wonderful day!</small>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<button onClick={() => navigate('/')}>Explore more products</button>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Success;\n","import React from 'react';\n\nclass SignOut extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className='sign-out'>\n\t\t\t\t<p>You have been successfully signed out. We hope to see you soon 😊</p>\n\t\t\t\t<small>\n\t\t\t\t\tThis is just a demo and your account is a demo account (i.e. no authentication has been involved\n\t\t\t\t\tjust yet). All addresses and payments have been recorded, but they don't yet represent real money for\n\t\t\t\t\tsafety reasons and for the purposes of the Rapyd Hackathon.\n\t\t\t\t</small>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default SignOut;\n","import React from 'react';\nimport { Router } from '@reach/router';\n\nimport Dashboard from './components/Dashboard/Dashboard';\nimport Checkout from './components/Checkout/Checkout';\nimport Success from './components/Success/Success';\nimport SignOut from './components/SignOut/SignOut';\n\nimport './App.css';\n\nclass App extends React.Component {\n    render() {\n        return (\n            <div className='App'>\n                <Router>\n                    <Dashboard path='/' />\n                    <Checkout path='/store/:storeId' />\n                    <Success path='/success' />\n                    <SignOut path='/see-you-soon' />\n                </Router>\n            </div>\n        )\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}